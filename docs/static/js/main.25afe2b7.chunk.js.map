{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","END_POINT","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetcchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAejD,OACC,sBAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfd,SAACP,GAC1B,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,S,+BCQDG,EAZF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,iDAC6CC,UAAUH,GADvD,kBAFF,GAEE,oBAHD,oCAGC,SAEII,MAAMF,GAFV,cAETG,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CAAEC,GAAID,EAAIC,GAAIC,MAAOF,EAAIE,MAAOC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAN3D,kBASRL,GATQ,4CAAH,sDCWEQ,EAXK,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACC,sBAAKI,UAAU,yCAAf,UACC,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCkBQQ,EApBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFL,SAACA,GAAc,IAAD,EAChBd,mBAAS,CAAEqB,KAAM,GAAIc,SAAS,IADd,mBACnCC,EADmC,KAC5BC,EAD4B,KAY1C,OATAC,qBAAU,WACTzB,EAAQC,GAAUyB,MAAK,SAACC,GACvBH,EAAS,CACRhB,KAAMmB,EACNL,SAAS,SAGT,CAACrB,IAEGsB,EDT2BK,CAAc3B,GAAlCc,EADmB,EACzBP,KAAcc,EADW,EACXA,QACtB,OACC,qCACC,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAElDqB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SACEH,EAAOL,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEXtBiB,EAAe,WAC3B,IADiC,EAEG1C,mBADxB,CAAC,cADoB,mBAE1B2C,EAF0B,KAEd5C,EAFc,KAIjC,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACE4C,EAAWpB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXnB8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.25afe2b7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setcategories }) => {\n\tconst [inputValue, setinputValue] = useState('');\n\tconst handleInputChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetinputValue(value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetcategories((cat) => [inputValue, ...cat]);\n\t\t\tsetinputValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = { setcategories: PropTypes.func.isRequired };\n","const apiKey = 'TJJNkPP3JFzDZVyPKvdXU1VSOO7FsTkD';\nconst limit = 10;\n\nconst getGifs = async (category) => {\n\tconst END_POINT = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${apiKey}`;\n\tconst resp = await fetch(END_POINT);\n\tconst { data } = await resp.json();\n\n\tconst gifs = data.map((img) => {\n\t\treturn { id: img.id, title: img.title, url: img.images?.downsized_medium.url };\n\t});\n\n\treturn gifs;\n};\n\nexport default getGifs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({ id, title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__bounce\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nGifGridItem.propTypes = {};\n\nexport default GifGridItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFetcchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetcchGifs(category);\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\t\t\t{\n\t\t\t\t<div className=\"card-grid\">\n\t\t\t\t\t{images.map((img) => {\n\t\t\t\t\t\treturn <GifGridItem key={img.id} {...img} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t);\n};\n\nGifGrid.propTypes = { category: PropTypes.string.isRequired };\n\nexport default GifGrid;\n","import { useEffect, useState } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetcchGifs = (category) => {\n\tconst [state, setstate] = useState({ data: [], loading: true });\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((imgs) => {\n\t\t\tsetstate({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\tconst arr = ['One Punch'];\n\tconst [categories, setcategories] = useState(arr);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setcategories={setcategories} />\n\t\t\t<hr />\n\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}